language: cpp
cache:
  timeout: 1000
  directories:
    - $HOME/vcpkg

matrix:
  include:
    - os: osx
      osx_image: xcode11.4
      name: macOS
      addons:
        homebrew:
          packages:
          - cmake
          - open-mpi
          - gcc
          update: true
      env:
        - MATRIX_EVAL="unset CC && unset CXX"

    - os: linux
      compiler: gcc
      name: ubuntu - gcc@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libopenmpi-dev
            - cmake
            - gcc-7
            - g++-7
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      compiler: gcc
      name: ubuntu - gcc@8.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libopenmpi-dev
            - cmake
            - gcc-8
            - g++-8
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      compiler: gcc
      name: ubuntu - gcc@9.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libopenmpi-dev
            - cmake
            - gcc-9
            - g++-9
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

    - os: linux
      compiler: gcc
      name: ubuntu - gcc@10.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libopenmpi-dev
            - cmake
            - gcc-10
            - g++-10
            - ninja-build
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"

    - os: linux
      compiler: clang
      name: ubuntu - clang@10.0
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
           packages:
            - libopenmpi-dev
            - cmake
            - clang-10
            - ninja-build
      env:
        - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"


before_install:
  - eval "${MATRIX_EVAL}"
  - pushd $HOME
  - if [ -d "$HOME/vcpkg/.git" ] ; then echo vcpkg cached ; else rm -rf vcpkg ; git clone https://github.com/Microsoft/vcpkg ; fi
  - cd vcpkg
  - git pull
  - ./bootstrap-vcpkg.sh
  - travis_wait ./vcpkg install jsoncons
  - popd

before_script:
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE="Release" -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg/scripts/buildsystems/vcpkg.cmake

script:
  - cmake --build . --target install
